[
    {
        "children": [],
        "_id": "6759f1bb095dcdb21cda4280",
        "node": "6759f1bb095dcdb47fda427f",
        "next": "675c486cd02a5c5f8439409f",
        "_data": {
            "_id": "6759f1bb095dcdb47fda427f",
            "referenceId": "87ab4f39-e825-4194-bad0-7c7fc015453b",
            "type": "start",
            "label": "Start",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isDisabled": false,
            "isEntryPoint": true,
            "extension": "@cognigy/basic-nodes",
            "config": {},
            "preview": "",
            "localeReference": "6759f148adc76698bc90c4c6"
        }
    },
    {
        "children": [],
        "_id": "6759f1bb095dcd105eda428d",
        "node": "6759f1bb095dcd0819da428a",
        "next": null,
        "_data": {
            "_id": "6759f1bb095dcd0819da428a",
            "referenceId": "83d96069-6b48-45aa-b0c7-50251a431ad2",
            "type": "end",
            "label": "End",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isDisabled": false,
            "isEntryPoint": false,
            "extension": "@cognigy/basic-nodes",
            "config": {},
            "preview": "",
            "localeReference": "6759f148adc76698bc90c4c6"
        }
    },
    {
        "children": [],
        "_id": "675c486cd02a5cbdfe3940a2",
        "node": "675c486cd02a5c5f8439409f",
        "next": "675c4cedadc7666d0c9ddfac",
        "_data": {
            "_id": "675c486cd02a5c5f8439409f",
            "referenceId": "1599bf7c-dafb-40fa-84d5-92c9938d0df2",
            "type": "code",
            "label": "READ ME",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isDisabled": false,
            "isEntryPoint": false,
            "extension": "@cognigy/basic-nodes",
            "config": {
                "code": "/* \r\nFlow Purpose\r\n\r\nThis flow is used to check if the data initialization via context inject worked. If not the fallback variant via input data object is executed.\r\n\r\n\r\n\r\n---------------------------------------\r\nCONNECTION TO OTHER FLOWS\r\n\r\nThis flow invokes the following flows:\r\nBF_03_set Session Configs\r\n\r\n\r\nThis flow gets invoked by the following flows:\r\n00_Main\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n */",
                "hasError": false,
                "transpiled": ""
            },
            "preview": "",
            "localeReference": "6759f148adc76698bc90c4c6"
        }
    },
    {
        "children": [
            "675c4929d02a5c3ff9394747",
            "675c4929d02a5c36b2394754"
        ],
        "_id": "675c4929d02a5c7dfb394740",
        "node": "675c4929d02a5c445639473d",
        "next": "675ca5d8d02a5c92e13c53a8",
        "_data": {
            "_id": "675c4929d02a5c445639473d",
            "referenceId": "01210b3b-edd3-49e5-a6a8-0d9078046fa0",
            "type": "if",
            "label": "Context is initialized?",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isDisabled": false,
            "isEntryPoint": false,
            "extension": "@cognigy/basic-nodes",
            "config": {
                "condition": {
                    "type": "condition",
                    "rule": {
                        "left": "1",
                        "operand": "eq",
                        "right": "1"
                    },
                    "condition": "{{ci.data.dataInitSuccess}}"
                }
            },
            "preview": {
                "type": "condition",
                "rule": {
                    "left": "1",
                    "operand": "eq",
                    "right": "1"
                },
                "condition": "{{ci.data.dataInitSuccess}}"
            },
            "localeReference": "6759f148adc76698bc90c4c6"
        }
    },
    {
        "children": [],
        "_id": "675c4929d02a5c980239474a",
        "node": "675c4929d02a5c3ff9394747",
        "next": null,
        "_data": {
            "_id": "675c4929d02a5c3ff9394747",
            "referenceId": "490824c1-4411-4144-9acf-81fb02bc2773",
            "type": "then",
            "label": "Then",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isDisabled": false,
            "isEntryPoint": false,
            "extension": "@cognigy/basic-nodes",
            "config": {},
            "preview": "",
            "localeReference": "6759f148adc76698bc90c4c6"
        }
    },
    {
        "children": [],
        "_id": "675c4929d02a5c8b39394757",
        "node": "675c4929d02a5c36b2394754",
        "next": "675c49a2d02a5c6b0e394bc8",
        "_data": {
            "_id": "675c4929d02a5c36b2394754",
            "referenceId": "b97ba9ee-1a5f-4393-af99-0ef553187dfa",
            "type": "else",
            "label": "Else",
            "comment": "If data initialization via context inject did not work, the context variables are attached in the input data object",
            "commentColor": "#ffff8d",
            "analyticsLabel": null,
            "isDisabled": false,
            "isEntryPoint": false,
            "extension": "@cognigy/basic-nodes",
            "config": {},
            "preview": "",
            "localeReference": "6759f148adc76698bc90c4c6"
        }
    },
    {
        "children": [],
        "_id": "675c49a2d02a5c7991394bcb",
        "node": "675c49a2d02a5c6b0e394bc8",
        "next": "675c4ad6677ba70ac5da0d47",
        "_data": {
            "_id": "675c49a2d02a5c6b0e394bc8",
            "referenceId": "b8ef178d-b5a3-4a0c-aaf6-676fed3791e5",
            "type": "code",
            "label": "C: Save input data to context",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isDisabled": false,
            "isEntryPoint": false,
            "extension": "@cognigy/basic-nodes",
            "config": {
                "code": "//Intialize the context by assigning the input data object to it\r\n\r\ntry {\r\n    //Assigning the context directly to cc does not work, therefore use both sub-keys\r\n    cc.sessionInformation = ci.data.contextInject.sessionInformation\r\n    cc.constants = ci.data.contextInject.constants\r\n\r\n} catch(error) {\r\n    api.log(\"error\", `[BF_01_Data Init; C: Initialize Context] Error Message: ${error.toString()}`)\r\n}",
                "hasError": false,
                "transpiled": "try {\n    cc.sessionInformation = ci.data.contextInject.sessionInformation;\n    cc.constants = ci.data.contextInject.constants;\n}\ncatch (error) {\n    api.log(\"error\", `[BF_01_Data Init; C: Initialize Context] Error Message: ${error.toString()}`);\n}\n"
            },
            "preview": "",
            "localeReference": "6759f148adc76698bc90c4c6"
        }
    },
    {
        "children": [
            "675c4ad6677ba70320da0d51",
            "675c4ad7677ba74d24da0d5e"
        ],
        "_id": "675c4ad6677ba72bceda0d4a",
        "node": "675c4ad6677ba70ac5da0d47",
        "next": null,
        "_data": {
            "_id": "675c4ad6677ba70ac5da0d47",
            "referenceId": "88bbd629-3dc1-4f1c-b705-c29022e77ffb",
            "type": "if",
            "label": "Fallback Context Injection worked?",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isDisabled": false,
            "isEntryPoint": false,
            "extension": "@cognigy/basic-nodes",
            "config": {
                "condition": {
                    "type": "condition",
                    "rule": {
                        "left": "1",
                        "operand": "eq",
                        "right": "1"
                    },
                    "condition": "{{!(_.isUndefined(cc.sessionInformation)) && !(_.isUndefined(cc.constants))}}"
                }
            },
            "preview": {
                "type": "condition",
                "rule": {
                    "left": "1",
                    "operand": "eq",
                    "right": "1"
                },
                "condition": "{{!(_.isUndefined(cc.sessionInformation)) && !(_.isUndefined(cc.constants))}}"
            },
            "localeReference": "6759f148adc76698bc90c4c6"
        }
    },
    {
        "children": [],
        "_id": "675c4ad6677ba78cf1da0d54",
        "node": "675c4ad6677ba70320da0d51",
        "next": null,
        "_data": {
            "_id": "675c4ad6677ba70320da0d51",
            "referenceId": "5b0a3ba9-51c6-4a2d-ae05-c3cfe130c079",
            "type": "then",
            "label": "Then",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isDisabled": false,
            "isEntryPoint": false,
            "extension": "@cognigy/basic-nodes",
            "config": {},
            "preview": "",
            "localeReference": "6759f148adc76698bc90c4c6"
        }
    },
    {
        "children": [],
        "_id": "675c4ad7677ba745d2da0d61",
        "node": "675c4ad7677ba74d24da0d5e",
        "next": "675c4b11adc76628449dd4fe",
        "_data": {
            "_id": "675c4ad7677ba74d24da0d5e",
            "referenceId": "7ced8bc8-791d-43fc-bd69-98354c0f3e21",
            "type": "else",
            "label": "Else",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isDisabled": false,
            "isEntryPoint": false,
            "extension": "@cognigy/basic-nodes",
            "config": {},
            "preview": "",
            "localeReference": "6759f148adc76698bc90c4c6"
        }
    },
    {
        "children": [],
        "_id": "675c4b11adc76624879dd501",
        "node": "675c4b11adc76628449dd4fe",
        "next": null,
        "_data": {
            "_id": "675c4b11adc76628449dd4fe",
            "referenceId": "17288d23-8206-479e-a89a-2bfae8359e26",
            "type": "goTo",
            "label": "G2: BF_04_Error Message",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isDisabled": false,
            "isEntryPoint": false,
            "extension": "@cognigy/basic-nodes",
            "config": {
                "flowNode": {
                    "flow": "1e0387fb-8933-46ad-9d01-ec1673296147",
                    "node": "8912bca9-96a5-498f-8a04-cc0394668cbd"
                },
                "absorbContext": false,
                "executionMode": "continue",
                "injectedText": "",
                "injectedData": "{}",
                "parseIntents": false,
                "parseKeyphrases": false
            },
            "preview": {
                "flow": "1e0387fb-8933-46ad-9d01-ec1673296147",
                "node": "8912bca9-96a5-498f-8a04-cc0394668cbd"
            },
            "localeReference": "6759f148adc76698bc90c4c6"
        }
    },
    {
        "children": [
            "675c4cb1adc76681189dde73",
            "675c4cb1adc76680109dde80"
        ],
        "_id": "675c4cb1adc7663caa9dde6c",
        "node": "675c4cb1adc76651659dde69",
        "next": "675c4915677ba7305ada0217",
        "_data": {
            "_id": "675c4cb1adc76651659dde69",
            "referenceId": "09677202-efd4-4f87-a469-c6323b80d715",
            "type": "if",
            "label": "User is not anonymous?",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isDisabled": false,
            "isEntryPoint": false,
            "extension": "@cognigy/basic-nodes",
            "config": {
                "condition": {
                    "type": "condition",
                    "rule": {
                        "left": "1",
                        "operand": "eq",
                        "right": "1"
                    },
                    "condition": "{{!cc.sessionInformation.callerNumber.startsWith(\"anonymous\")}}"
                }
            },
            "preview": {
                "type": "condition",
                "rule": {
                    "left": "1",
                    "operand": "eq",
                    "right": "1"
                },
                "condition": "{{!cc.sessionInformation.callerNumber.startsWith(\"anonymous\")}}"
            },
            "localeReference": "6759f148adc76698bc90c4c6"
        }
    },
    {
        "children": [],
        "_id": "675c4cb1adc76650e49dde76",
        "node": "675c4cb1adc76681189dde73",
        "next": "675c4e3b677ba79776da2445",
        "_data": {
            "_id": "675c4cb1adc76681189dde73",
            "referenceId": "7fe6728c-a319-4f5c-8fe4-a0b92cc9e25c",
            "type": "then",
            "label": "Then",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isDisabled": false,
            "isEntryPoint": false,
            "extension": "@cognigy/basic-nodes",
            "config": {},
            "preview": "",
            "localeReference": "6759f148adc76698bc90c4c6"
        }
    },
    {
        "children": [],
        "_id": "675c4cb1adc76680b69dde83",
        "node": "675c4cb1adc76680109dde80",
        "next": null,
        "_data": {
            "_id": "675c4cb1adc76680109dde80",
            "referenceId": "e185a64e-cfb7-4b46-84e3-db126267cd1a",
            "type": "else",
            "label": "Else",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isDisabled": false,
            "isEntryPoint": false,
            "extension": "@cognigy/basic-nodes",
            "config": {},
            "preview": "",
            "localeReference": "6759f148adc76698bc90c4c6"
        }
    },
    {
        "children": [],
        "_id": "675c4cedadc766415a9ddfaf",
        "node": "675c4cedadc7666d0c9ddfac",
        "next": "675c4929d02a5c445639473d",
        "_data": {
            "_id": "675c4cedadc7666d0c9ddfac",
            "referenceId": "83907402-77cd-4a57-8b75-05473bee5b11",
            "type": "code",
            "label": "C: Mock Context for debugging",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isDisabled": false,
            "isEntryPoint": false,
            "extension": "@cognigy/basic-nodes",
            "config": {
                "code": "try {\r\n    //The input object contains the endpoint type property, which can be used to check if the data init flow was triggered by the admin console or a prodctive endpoint\r\n    if(ci.endpointType == \"adminconsole\") {\r\n        cc.sessionInformation = {\r\n            \"caller\": \"+49176145265874\",\r\n            \"callee\": \"+49123456789123\",\r\n            \"noUserInputCounter\": 0,\r\n            \"sessionConfigDefaults\": {\r\n                \"userTimeout\": 5000,\r\n                \"bargeIn\": false,\r\n                \"bargeInOnDtmf\": false,\r\n                \"bargeInOnSpeech\": false,\r\n                \"asr\": false,\r\n                \"asrTimeout\": 3000\r\n            }\r\n\t    }\r\n\r\n        cc.constants = {\r\n            \"apiBaseUrl\": \"https://api-trial.cognigy.ai/new\",\r\n\t\t    \"handoverTransferTarget\": \"+49123456789\",\r\n            \"flowControllerPercentages\": {\r\n                \"recordingConsent\": 1.0\r\n            },\r\n            \"contract\": {\r\n                \"contractPrefixes\": [\r\n                    \"KV\",\r\n                    \"SV\",\r\n                    \"AB\"\r\n                ],\r\n                \"firstname\" : {\r\n                    \"value\" : \"Kliment\"\r\n                }\r\n    \t    },\r\n            \"maxNoUserInputs\": 3\r\n        }\r\n\r\n        //Set dataInitSuccess flag to simulate succesful context inject\r\n        ci.data.dataInitSuccess = true\r\n\r\n        //Simulate routing bot sip-header\r\n        ci.data.sipHeader = {\r\n            \"recordingConsent\": true\r\n        }\r\n    }\r\n\r\n} catch(error) {\r\n    api.log(\"error\", `[BF_01_Data Init; C: Mock Context for debugging] Error Message: ${error.toString()}`)\r\n\r\n}",
                "hasError": false,
                "transpiled": "try {\n    if (ci.endpointType == \"adminconsole\") {\n        cc.sessionInformation = {\n            \"caller\": \"+49176145265874\",\n            \"callee\": \"+49123456789123\",\n            \"noUserInputCounter\": 0,\n            \"sessionConfigDefaults\": {\n                \"userTimeout\": 5000,\n                \"bargeIn\": false,\n                \"bargeInOnDtmf\": false,\n                \"bargeInOnSpeech\": false,\n                \"asr\": false,\n                \"asrTimeout\": 3000\n            }\n        };\n        cc.constants = {\n            \"apiBaseUrl\": \"https://api-trial.cognigy.ai/new\",\n            \"handoverTransferTarget\": \"+49123456789\",\n            \"flowControllerPercentages\": {\n                \"recordingConsent\": 1.0\n            },\n            \"contract\": {\n                \"contractPrefixes\": [\n                    \"KV\",\n                    \"SV\",\n                    \"AB\"\n                ],\n                \"firstname\": {\n                    \"value\": \"Kliment\"\n                }\n            },\n            \"maxNoUserInputs\": 3\n        };\n        ci.data.dataInitSuccess = true;\n        ci.data.sipHeader = {\n            \"recordingConsent\": true\n        };\n    }\n}\ncatch (error) {\n    api.log(\"error\", `[BF_01_Data Init; C: Mock Context for debugging] Error Message: ${error.toString()}`);\n}\n"
            },
            "preview": "",
            "localeReference": "6759f148adc76698bc90c4c6"
        }
    },
    {
        "children": [],
        "_id": "675c4e3b677ba71873da2448",
        "node": "675c4e3b677ba79776da2445",
        "next": null,
        "_data": {
            "_id": "675c4e3b677ba79776da2445",
            "referenceId": "2cd422dd-9a26-40b2-b646-3ea9b34ceaf4",
            "type": "code",
            "label": "PLACEHOLDER",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isDisabled": false,
            "isEntryPoint": false,
            "extension": "@cognigy/basic-nodes",
            "config": {
                "code": "/* \r\n**PLACEHOLDER NODE**\r\n\r\nDescription:\r\n\r\nUse this branch to extract relevant caller meta data if the user is not anonymous and if this meta data is needed. \r\nRelevant data could be which country the caller is calling from, if the number is mobile or landline etc. \r\nThis information can be used for advanced processing in the upcoming flows.\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n\r\n",
                "hasError": false,
                "transpiled": ""
            },
            "preview": "",
            "localeReference": "6759f148adc76698bc90c4c6"
        }
    },
    {
        "children": [],
        "_id": "675ca5b2677ba7d404dcd505",
        "node": "675c4915677ba7305ada0217",
        "next": "6759f1bb095dcd0819da428a",
        "_data": {
            "_id": "675c4915677ba7305ada0217",
            "referenceId": "5d85132a-4aaa-431c-a2f7-ed0b8b911de1",
            "type": "executeFlow",
            "label": "EX: BF_03_Set Session Config",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isDisabled": false,
            "isEntryPoint": false,
            "extension": "@cognigy/basic-nodes",
            "config": {
                "flowNode": {
                    "flow": "5aa76250-484b-4fa9-8a2d-13f9e1700b32",
                    "node": "a4d6a046-b456-472a-8162-6ee8b8a038c8"
                },
                "parseIntents": true,
                "parseKeyphrases": true,
                "absorbContext": ""
            },
            "preview": {
                "flow": "5aa76250-484b-4fa9-8a2d-13f9e1700b32",
                "node": "a4d6a046-b456-472a-8162-6ee8b8a038c8"
            },
            "localeReference": "6759f148adc76698bc90c4c6"
        }
    },
    {
        "children": [],
        "_id": "675ca5d8d02a5c17483c53ab",
        "node": "675ca5d8d02a5c92e13c53a8",
        "next": "675ca699d02a5cbda93c54e1",
        "_data": {
            "_id": "675ca5d8d02a5c92e13c53a8",
            "referenceId": "25bd189a-1f5b-49ca-b3f1-5c798678581a",
            "type": "code",
            "label": "C: Extract routing data",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isDisabled": false,
            "isEntryPoint": false,
            "extension": "@cognigy/basic-nodes",
            "config": {
                "code": "//Extract the data that is sent via Sip-Header by the Routing Bot\r\n\r\ntry {\r\n    cc.sessionInformation.recordingConsent = ci.data.sipHeader.recordingConsent\r\n} catch(error) {\r\n    api.log(\"error\", `[BF_01_Data Init; C: Extract Routing Data] Error Message: ${error.toString()}`)\r\n\r\n}",
                "hasError": false,
                "transpiled": "try {\n    cc.sessionInformation.recordingConsent = ci.data.sipHeader.recordingConsent;\n}\ncatch (error) {\n    api.log(\"error\", `[BF_01_Data Init; C: Extract Routing Data] Error Message: ${error.toString()}`);\n}\n"
            },
            "preview": "",
            "localeReference": "6759f148adc76698bc90c4c6"
        }
    },
    {
        "children": [
            "675ca699d02a5c8c3e3c54eb",
            "675ca699d02a5c20e23c54f8"
        ],
        "_id": "675ca699d02a5c850d3c54e4",
        "node": "675ca699d02a5cbda93c54e1",
        "next": "675c4cb1adc76651659dde69",
        "_data": {
            "_id": "675ca699d02a5cbda93c54e1",
            "referenceId": "fbfd3ccf-bdab-4256-a1c9-3cac7450b16c",
            "type": "if",
            "label": "Recording Consent given?",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isDisabled": false,
            "isEntryPoint": false,
            "extension": "@cognigy/basic-nodes",
            "config": {
                "condition": {
                    "type": "condition",
                    "rule": {
                        "left": "1",
                        "operand": "eq",
                        "right": "1"
                    },
                    "condition": "{{cc.sessionInformation.recordingConsent}}"
                }
            },
            "preview": {
                "type": "condition",
                "rule": {
                    "left": "1",
                    "operand": "eq",
                    "right": "1"
                },
                "condition": "{{cc.sessionInformation.recordingConsent}}"
            },
            "localeReference": "6759f148adc76698bc90c4c6"
        }
    },
    {
        "children": [],
        "_id": "675ca699d02a5c11833c54ee",
        "node": "675ca699d02a5c8c3e3c54eb",
        "next": null,
        "_data": {
            "_id": "675ca699d02a5c8c3e3c54eb",
            "referenceId": "32a6192f-3164-4922-9794-9bfb3b1e64d7",
            "type": "then",
            "label": "Then",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isDisabled": false,
            "isEntryPoint": false,
            "extension": "@cognigy/basic-nodes",
            "config": {},
            "preview": "",
            "localeReference": "6759f148adc76698bc90c4c6"
        }
    },
    {
        "children": [],
        "_id": "675ca699d02a5c33eb3c54fb",
        "node": "675ca699d02a5c20e23c54f8",
        "next": "675ca6ab677ba7d545dcd667",
        "_data": {
            "_id": "675ca699d02a5c20e23c54f8",
            "referenceId": "93ccfc03-c0ea-4209-8a73-870e6e5bec5f",
            "type": "else",
            "label": "Else",
            "comment": "",
            "commentColor": "",
            "analyticsLabel": null,
            "isDisabled": false,
            "isEntryPoint": false,
            "extension": "@cognigy/basic-nodes",
            "config": {},
            "preview": "",
            "localeReference": "6759f148adc76698bc90c4c6"
        }
    },
    {
        "children": [],
        "_id": "675ca6ab677ba727addcd66a",
        "node": "675ca6ab677ba7d545dcd667",
        "next": null,
        "_data": {
            "_id": "675ca6ab677ba7d545dcd667",
            "referenceId": "2d06938f-51a2-4e0f-9a85-8c9c3af40769",
            "type": "blindMode",
            "label": "Blind Mode",
            "comment": "Blind Mode masks all user input",
            "commentColor": "",
            "analyticsLabel": null,
            "isDisabled": false,
            "isEntryPoint": false,
            "extension": "@cognigy/basic-nodes",
            "config": {
                "maskLogging": true,
                "maskAnalytics": true,
                "disableIntentTrainer": true,
                "disableConversations": false
            },
            "preview": "",
            "localeReference": "6759f148adc76698bc90c4c6"
        }
    }
]