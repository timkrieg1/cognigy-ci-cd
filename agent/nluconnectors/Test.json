{
    "_id": "68726325432d29bf054e6c35",
    "referenceId": "d5d9d021-9765-4c4f-ae33-76e5c9c08015",
    "type": "cognigy",
    "name": "Test",
    "settings": {},
    "createdBy": "65605bbcde1bccb4b9af6114",
    "createdAt": 1752326949,
    "lastChangedBy": "65605bbcde1bccb4b9af6114",
    "lastChanged": 1752326949,
    "transformer": {
        "transformer": "createNluTransformer({\n\n\t/**\n\t * This transformer is executed when receiving a message from\n\t * the endpoint, before executing the NLU engine.\n\t *\n\t * @param text The text from the message.\n\t * @param data The data object from the message.\n\t * @param language The language code from the Flow.\n\t *\n\t * @returns Text and/or data, as changed in the transformer.\n\t */\n\tpreNlu: async ({ text, data, language }) => {\n\t\t\n\t\treturn {\n\t\t\ttext,\n\t\t\tdata\n\t\t};\n\t},\n\n\t/**\n\t * This transformer is executed when receiving the output from the\n\t * NLU engine, before executing the Flow.\n\t *\n\t * @param text The text from the message.\n\t * @param data The data object from the message.\n\t * @param nluResult Intent, type, slots, intentscore and nlu,\n\t * after executing the NLU engine.\n\t * @param connectorOutput The raw output from the NLU engine.\n\t *\n\t * @returns nluResult and/or data, as changed in the transformer.\n\t */\n\tpostNlu: async ({ text, data, nluResult, connectorOutput }) => {\n\n\t\t/**\n\t\t * Extract intent, type, slots and intentScore\n\t\t * from the NLU result. Example:\n\t\t *\n\t\t * const { intent, type, slots, intentScore, nlu } = nluResult;\n\t\t */\n\n\t\treturn {\n\t\t\tdata,\n\t\t\tnluResult\n\t\t};\n\t},\n});",
        "transpiledTransformer": "createNluTransformer({\n\n\t/**\n\t * This transformer is executed when receiving a message from\n\t * the endpoint, before executing the NLU engine.\n\t *\n\t * @param text The text from the message.\n\t * @param data The data object from the message.\n\t * @param language The language code from the Flow.\n\t *\n\t * @returns Text and/or data, as changed in the transformer.\n\t */\n\tpreNlu: async ({ text, data, language }) => {\n\t\t\n\t\treturn {\n\t\t\ttext,\n\t\t\tdata\n\t\t};\n\t},\n\n\t/**\n\t * This transformer is executed when receiving the output from the\n\t * NLU engine, before executing the Flow.\n\t *\n\t * @param text The text from the message.\n\t * @param data The data object from the message.\n\t * @param nluResult Intent, type, slots, intentscore and nlu,\n\t * after executing the NLU engine.\n\t * @param connectorOutput The raw output from the NLU engine.\n\t *\n\t * @returns nluResult and/or data, as changed in the transformer.\n\t */\n\tpostNlu: async ({ text, data, nluResult, connectorOutput }) => {\n\n\t\t/**\n\t\t * Extract intent, type, slots and intentScore\n\t\t * from the NLU result. Example:\n\t\t *\n\t\t * const { intent, type, slots, intentScore, nlu } = nluResult;\n\t\t */\n\n\t\treturn {\n\t\t\tdata,\n\t\t\tnluResult\n\t\t};\n\t},\n});",
        "abortOnError": false,
        "preNluTransformerEnabled": false,
        "postNluTransformerEnabled": false,
        "transformerStackEnabled": false
    }
}